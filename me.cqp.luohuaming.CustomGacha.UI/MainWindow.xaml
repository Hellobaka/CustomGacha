<Window x:Class="me.cqp.luohuaming.CustomGacha.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:me.cqp.luohuaming.CustomGacha.UI"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:controls="clr-namespace:HandyControl.Controls;assembly=HandyControl"
        xmlns:b2i="clr-namespace:me.cqp.luohuaming.CustomGacha.UI.Converter"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="700"
        Width="1200"
        WindowStartupLocation="CenterScreen"
        KeyDown="Window_KeyDown">
    <Window.Resources>
        <Style x:Key="ListBoxContainerStyle"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Opacity="0.6"
                                               SnapsToDevicePixels="True"
                                               Stroke="{DynamicResource SecondaryBorderBrush}"
                                               StrokeThickness="2"
                                               StrokeDashArray="1 1" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Padding"
                    Value="10,0" />
            <Setter Property="MinHeight"
                    Value="30" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Background"
                    Value="{DynamicResource RegionBrush}" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding (controls:BorderElement.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.BasedOn>
                <Style TargetType="{x:Type Control}">
                    <Setter Property="Foreground"
                            Value="{DynamicResource PrimaryTextBrush}" />
                    <Setter Property="FontSize"
                            Value="12" />
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle RadiusY="4"
                                                       RadiusX="4">
                                                <Rectangle.Style>
                                                    <Style TargetType="{x:Type Rectangle}">
                                                        <Setter Property="Margin"
                                                                Value="-2" />
                                                        <Setter Property="Opacity"
                                                                Value="0.6" />
                                                        <Setter Property="SnapsToDevicePixels"
                                                                Value="True" />
                                                        <Setter Property="Stroke"
                                                                Value="{DynamicResource SecondaryBorderBrush}" />
                                                        <Setter Property="StrokeThickness"
                                                                Value="2" />
                                                        <Setter Property="StrokeDashArray"
                                                                Value="1 1" />
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource SecondaryRegionBrush}" />
                </Trigger>
                <Trigger Property="IsSelected"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource PrimaryBrush}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource TextIconBrush}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected"
                                   Value="True" />
                        <Condition Property="Selector.IsSelectionActive"
                                   Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background"
                            Value="{DynamicResource DarkDefaultBrush}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource PrimaryTextBrush}" />
                </MultiTrigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Opacity"
                            Value="0.4" />
                </Trigger>
                <Trigger Property="controls:EdgeElement.ShowEdgeContent"
                         Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="True">
                                    <StackPanel Orientation="Horizontal">
                                        <ContentControl Content="{Binding (controls:EdgeElement.LeftContent), RelativeSource={RelativeSource TemplatedParent}}"
                                                        Height="16"
                                                        Width="16" />
                                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Margin="6,0,0,0"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <b2i:Bool2IntConverter x:Key="b2iConverter" />
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="4*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="9*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <ListBox x:Name="Pools"
                     MouseDoubleClick="ListBox_MouseDoubleClick"
                     DisplayMemberPath="Name"
                     ItemsSource="{Binding Pools, Mode=TwoWay}"
                     SelectedItem="{Binding SelectPool}"
                     SelectionChanged="Pools_SelectionChanged"
                     SelectionMode="Single">
            </ListBox>
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Center"
                        Grid.Row="1">
                <Button Tag="Add"
                        Command="{Binding AddPool}">Add</Button>
                <Button Tag="Delete"
                        Command="{Binding DeletePool}">Delete</Button>
                <Button Command="{Binding PoolDrawTest}">Test</Button>
            </StackPanel>

        </Grid>
        <Grid Grid.Row="1"
              Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="9*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="4*" />
                </Grid.ColumnDefinitions>
                <ListBox x:Name="Category"
                         SelectionMode="Single"
                         DisplayMemberPath="Name"
                         SelectedItem="{Binding SelectCategory}"
                         SelectionChanged="Pools_SelectionChanged"
                         ItemsSource="{Binding Categories, Mode=TwoWay}" />
                <ListBox x:Name="Content"
                         MouseDoubleClick="ListBox_MouseDoubleClick"
                         SelectedItem="{Binding SelectGachaItem}"
                         SelectionChanged="Pools_SelectionChanged"
                         ItemsSource="{Binding GachaItems}"
                         SelectionMode="Single"
                         Grid.Column="2"
                         ItemContainerStyle="{DynamicResource ListBoxContainerStyle}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Border BorderBrush="#FFFF4600"
                                        BorderThickness="{Binding IsUp, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource b2iConverter}}"
                                        CornerRadius="5">
                                    <StackPanel Margin="3">
                                        <TextBlock Text="{Binding Path=Name}" />
                                        <TextBlock Text="{Binding Path=Probablity, StringFormat=概率: {0} %}"
                                                   FontSize="10" />
                                    </StackPanel>
                                </Border>
                                
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Grid.Row="1">
                <ToggleButton x:Name="ButtonDirection"
                              BorderThickness="0"
                              IsChecked="{Binding ButtonDirection}"
                              HorizontalAlignment="Center"
                              Style="{StaticResource ToggleButtonFlip}">
                    <hc:StatusSwitchElement.CheckedElement>
                        <Border Background="{DynamicResource PrimaryBrush}">
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="右"
                                       Foreground="{DynamicResource TextIconBrush}" />
                        </Border>
                    </hc:StatusSwitchElement.CheckedElement>
                    <Border Background="{DynamicResource InfoBrush}">
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Text="左"
                                   Foreground="{DynamicResource TextIconBrush}" />
                    </Border>
                </ToggleButton>
                <Button Tag="Add"
                        Command="{Binding AddGachaItem}">Add</Button>
                <Button Tag="Delete"
                        Command="{Binding DeleteGachaItem}">Delete</Button>
                <Button Command="{Binding CopyGachaItem}">Copy</Button>
                <Button Command="{Binding ShowInteractiveDialogCmd}">Query</Button>
            </StackPanel>
        </Grid>
        <Grid Grid.Column="1"
              Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock Margin="5"><Run Text="按F4快捷呼起文件选择对话框 RelativePath 请手动填写" /></TextBlock>
            <ScrollViewer Grid.Row="1">
                <controls:PropertyGrid x:Name="PropertyEdit" />
            </ScrollViewer>
        </Grid>
        <StackPanel HorizontalAlignment="Right"
                    controls:Growl.GrowlParent="False"
                    VerticalAlignment="Top"
                    Margin="0,10,10,10"
                    Grid.Column="2"
                    Grid.RowSpan="2" />
    </Grid>
</Window>
